mapped_keys <- mappedkeys(x)
# Convert to a list
xx <- as.list(x[mapped_keys])
if(length(xx) == "aae-mir-2765") {
# Get the CHR for the first five entries
xx
}
x <- mirbaseCHR
# Get the microRNA identifiers that are mapped to a chromosome
mapped_keys <- mappedkeys(x)
# Convert to a list
xx <- as.list(x[mapped_keys])
if(length(xx) == "aae-mir-2765") {
# Get the CHR for the first five entries
print(xx)
}
xx <- as.list(x[mapped_keys])
if(1:length(xx) == "aae-mir-2765") {
# Get the CHR for the first five entries
print(xx)
}
x <- mirbaseCHR
# Get the microRNA identifiers that are mapped to a chromosome
mapped_keys <- mappedkeys(x)
# Convert to a list
xx <- as.list(x[mapped_keys])
for (i in 1:length(xx)){
if (xx == "aae-mir-2765")
print(i)
}
x <- mirbaseCHR
# Get the microRNA identifiers that are mapped to a chromosome
mapped_keys <- mappedkeys(x)
# Convert to a list
xx <- as.list(x[mapped_keys])
for (i in 1:length(xx)){
if (xx == "aae-mir-2765")
print(xx)
}
x <- mirbaseCHR
# Get the microRNA identifiers that are mapped to a chromosome
mapped_keys <- mappedkeys(x)
# Convert to a list
xx <- as.list(x[mapped_keys])
for (i in 1:length(xx)){
if (xx == "aae-mir-2765")
print(i)
}
print(length(xx))
for (i in 1:length(xx)){
if (xx == "aae-mir-2765"){
print(i)
}
}
x <- mirbaseCHR
# Get the microRNA identifiers that are mapped to a chromosome
mapped_keys <- mappedkeys(x)
# Convert to a list
xx <- as.list(x[mapped_keys])
if(length(xx) > 0) {
# Get the CHR for the first five entries
xx[1:5]
}
for (i in 1:length(xx)){
if (xx[i] == "aae-mir-2765"){
print(i)
}
}
for (i in 1:length(xx)){
if (xx[i] == "aae-mir-2765"){
print(i)
}
}
xx$aae-mir-2765
xx.aae-mir-2765
xx[`aae-mir-2765`]
xx['aae-mir-2765']
xx["hsa-miR-122"]
xx["hsa-mir-122"]
x <- mirbaseCONTEXT
get(mappedkeys(x)["hsa-mir-122"], x)
x <- mirbaseCONTEXT
# Get the microRNA identifiers that are mapped to a chromosome
mapped_keys <- mappedkeys(x)
# Convert to a list
xx <- as.list(x[mapped_keys])
if(length(xx) > 0) {
# Get the CHR for the first five entries
xx["hsa-mir-122"]
}
x <- mirbaseCONTEXT
get(mappedkeys(x)[1], x)
x <- mirbaseCONTEXT
get(mappedkeys(x)[1:10], x)
x <- mirbaseCONTEXT
get(mappedkeys(x)[1:10] )
x <- mirbaseCONTEXT
get(mappedkeys(x)[1] )
get(mappedkeys(x)[1:10], x)
length(x)
str(x)
levels(x)
x <- mirbaseFAMILY
# first 3 microRNA with a family.
mget(mappedkeys(x)[1:3], x)
x <- mirbaseFAMILY
# first 3 microRNA with a family.
mget(mappedkeys(x)["hsa-mir-122"], x)
mget(mappedkeys(x)[1:5], x)
mget(mappedkeys(x)[1:50], x)
mget(mappedkeys(x)["mir-122"], x)
x <- mirbaseCONTEXT
# Get the CONTEXT for the first element mapped
get(mappedkeys(x)[1], x)
view(get(mappedkeys(x)[1], x))
library("utils", lib.loc="C:/Program Files/R/R-4.0.3/library")
view(get(mappedkeys(x)[1], x))
get(mappedkeys(x)[1:10], x)
get(mappedkeys(x)["mir-122"], x)
y<-c("mir-122", "mir-155")
get(mappedkeys(x)[y], x)
x <- mirbaseDESCRIPTION
# first 3 entries with a description.
mget(mappedkeys(x)[1:3], x)
mget(mappedkeys(x)["aae-mir-2765"], x)
mget(mappedkeys(x["aae-mir-2765"])[1:3], x)
mget(mappedkeys(x[])[1:3], x)
mget(mappedkeys(x)[1:1], x)
ls("package:mirbase.db")
install.packages("canceR")
install.packages("C:/Users/N5110/Downloads/canceR_1.24.0.zip", repos = NULL, type = "win.binary")
library(canceR)
library("canceR", lib.loc="~/R/win-library/4.0")
install.packages("C:/Users/N5110/Downloads/canceR_1.24.0.zip", repos = NULL, type = "win.binary")
library("canceR", lib.loc="~/R/win-library/4.0")
require("canceR")
install.packages("cgdsr")
library(cgdsr)
mycgds = CGDS("http://www.cbioportal.org/")
getMutationData(mycgds,gbm_tcga_all,gbm_tcga_mutations,c('EGFR','PTEN'))
getMutationData(mycgds,gbm_tcga_microrna,gbm_tcga_mutations,c('EGFR','PTEN'))
getCancerStudies(mycgds)
getMutationData(mycgds,gbm_tcga_microrna,gbm_tcga_mutations,c('EGFR','PTEN'))
getMutationData.CGDS(mycgds,gbm_tcga_microrna,gbm_tcga_mutations,c('EGFR','PTEN'))
getMutationData.CGDS(mycgds,gbm_tcga_mutations,c('EGFR','PTEN'))
getMutationData.CGDS(mycgds,c('EGFR','PTEN'))
getMutationData.CGDS(mycgds,geneticProfile = "gbm_tcga_microrna", c('EGFR','PTEN'))
getMutationData.CGDS(mycgds,geneticProfile = "gbm_tcga_microrna", genes = "PTEN")
getMutationData.CGDS(mycgds,geneticProfile = "gbm_tcga_microrna", caseList = "gbm_tcga_mutations",genes = "PTEN")
getMutationData.CGDS(mycgds,geneticProfile = "gbm_tcga_all", caseList = "gbm_tcga_mutations",genes = "PTEN")
getMutationData(mycgds,geneticProfile = "gbm_tcga_all", caseList = "gbm_tcga_mutations",genes = "PTEN")
getMutationData(mycgds,geneticProfile = "gbm_tcga_all", caseList = "gbm_tcga_mutations",genes = c('EGFR','PTEN'))
getCancerStudies(mycgds)
mycgds = CGDS("http://www.cbioportal.org/")
getCancerStudies(mycgds)
getMutationData(mycgds,geneticProfile = "gbm_tcga_all", caseList = "gbm_tcga_mutations",genes = c('EGFR','PTEN'))
getCancerStudies(mycgds[lihc_tcga])
getCancerStudies(mycgds[lihc_tcga,])
mycgds = CGDS("http://www.cbioportal.org/")
getCancerStudies(mycgds[lihc_tcga,])
getCancerStudies(mycgds)
GeneticProfiles(mycgds, mycancerstudy)
getGeneticProfiles(mycgds)
mycancerstudy = "lihc_tcga"
getGeneticProfiles(mycgds)
mycgds = CGDS("http://www.cbioportal.org/")
getCancerStudies(mycgds)
mycancerstudy = "lihc_tcga"
getGeneticProfiles(mycgds)
getProfileData(mycgds)
mycancerstudy = getCancerStudies(mycgds)[2,1]
mycancerstudy
mycancerstudy = getCancerStudies(mycgds)[144,1]
mycancerstudy
mycancerstudy = getCancerStudies(mycgds)[114,1]
mycancerstudy
mycancerstudy = getCancerStudies(mycgds)[113,1]
mycancerstudy
mycancerstudy = getCancerStudies(mycgds)[112,1]
mycancerstudy
mycancerstudy = getCancerStudies(mycgds)[111,1]
mycancerstudy
getCancerStudies(mycgds)
mycancerstudy = getCancerStudies(mycgds)[112,1]
getCaseLists(mycgds,lihc_tcga)
getCaseLists(mycgds,"lihc_tcga")
getGeneticProfiles(mycgds,"lihc_tcga")
getMutationData(mycgds,lihc_tcga_mutations, lihc_tcga_all ,genes = c('EGFR','PTEN'))
library("utils", lib.loc="C:/Program Files/R/R-4.0.3/library")
view(getCancerStudies(mycgds))
mycgds = CGDS("http://www.cbioportal.org/")
getCancerStudies(mycgds)
mycgds = CGDS("http://www.cbioportal.org/")
getMutationData(mycgds,lihc_tcga_mutations, lihc_tcga_all ,genes = c('EGFR','PTEN'))
getCaseLists(mycgds,"lihc_tcga")
getGeneticProfiles(mycgds,"lihc_tcga")
require("canceR")
library(cgdsr)
#mycgds = CGDS("http://www.cbioportal.org/")
#getCancerStudies(mycgds)
mycancerstudy = getCancerStudies(mycgds)[112,1]
getCaseLists(mycgds,"lihc_tcga")
getGeneticProfiles(mycgds,"lihc_tcga")
mycgds = CGDS("http://www.cbioportal.org/")
getMutationData(mycgds,caseList = " lihc_tcga_all",geneticProfile =  "lihc_tcga_mutations" ,genes = c('EGFR','PTEN'))
mycgds = CGDS("http://www.cbioportal.org/")
getMutationData(mycgds, caseList = "lihc_tcga_all",geneticProfile = "lihc_tcga_mutations", genes = c('EGFR','PTEN'))
mycgds = CGDS("http://www.cbioportal.org/")
getMutationData(mycgds, caseList = "lihc_tcga_all",geneticProfile = "lihc_tcga_mutations", genes = 'PTEN')
mycgds = CGDS("http://www.cbioportal.org/")
getMutationData(mycgds, caseList = "lihc_tcga_sequenced",geneticProfile = "lihc_tcga_mutations", genes = 'PTEN')
mycgds = CGDS("http://www.cbioportal.org/")
getMutationData(mycgds, caseList = "lihc_tcga_cnaseq",geneticProfile = "lihc_tcga_mutations", genes = 'PTEN')
mycgds = CGDS("http://www.cbioportal.org/")
getMutationData(mycgds, caseList = "lihc_tcga_all",geneticProfile = "lihc_tcga_mutations", genes = 'PTEN')
corpus<- xmlreadabs("pubmed_01.txt")
hcc_mutation<-searchabsL(corpus, include = "mutation")
gene_mutation<-xmlgene_atomizations(hcc_mutation)
View(gene_mutation)
norm_mutation<-xmlword_atomizations(hcc_mutation)
view(norm_mutation)
View(norm_mutation)
View(gene_mutation$Gene_symbol)
x= getMutationData(mycgds, caseList = "lihc_tcga_all",geneticProfile = "lihc_tcga_mutations", genes = 'PTEN')
mycgds = CGDS("http://www.cbioportal.org/")
x= getMutationData(mycgds, caseList = "lihc_tcga_all",geneticProfile = "lihc_tcga_mutations", genes = 'PTEN')
x
tabla_mut<-c(x$entrez_gene_id, x$entrez_gene_id, x$mutation_type, x$amino_acid_change)
tabla_mut
mycgds = CGDS("http://www.cbioportal.org/")
x= getMutationData(mycgds, caseList = "lihc_tcga_all",geneticProfile = "lihc_tcga_mutations", genes = 'PTEN')
x
tabla_mut<-x[ ,-2:-4]
tabla_mut
tabla_mut<-x[ ,-3:-5]
tabla_mut
tabla_mut<-x[ ,c(-3:-5, 6,8)]
tabla_mut<-x[ ,c(-3:-5,-6, -8)]
tabla_mut
tabla_mut<-x[ ,c(-3:-5,-7, -9)]
tabla_mut
tabla_mut<-x[ ,c(-3:-5,-7, -9,-10,-13,-14-15,-16,-17)]
tabla_mut
mycgds = CGDS("http://www.cbioportal.org/")
x= getMutationData(mycgds, caseList = "lihc_tcga_all",geneticProfile = "lihc_tcga_mutations", genes = 'PTEN')
x
tabla_mut<-x[ ,c(-3:-5,-7, -9:-12,-14-15,-18:-22)]
tabla_mut
tabla_mut<-rename(tabla_mut, Entrez_ID= entrez_gene_id)
tabla_mut
tabla_mut<-x[ ,c(-3:-5,-7, -9:-12,-14-15,-18:-22)]
colnames(tabla_mut)<-c("Entrez_ID", "Gene", "Tipo de mutacion", "Cambio en aa.", "Nro Chr", "Posicion Inicio", "Posicion Final", "Referencia", "Variante")
tabla_mut
shiny::runApp('D:/TFM/TFM')
runApp()
runApp()
q()
q
exit
quit
shiny::runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
shiny::runApp('D:/TFM/TFM')
library(rclinicaltrials)
clinicaltrials_search(query = "hepatocellular carcinoma", count = 20)
runApp('D:/TFM/TFM')
install.packages("multiMiR")
BiocManager::install("multiMiR")
install.packages("C:/Users/N5110/Downloads/multiMiR_1.12.0.tar.gz", repos = NULL, type = "source")
library(multiMiR)
genesDiana<- get.multimir(miarn= "hsa-miR-122", summary = TRUE)
genesDiana<- get.multimir("hsa-miR-122", summary = TRUE)
genesDiana<- get_multimir("hsa-miR-122", summary = TRUE)
genesDiana<- get_multimir( "hsa-miR-122", summary = TRUE)
library(multiMiR)
genesDiana<- get_multimir( "hsa-miR-122", summary = TRUE)
example1 <- get_multimir(mirna='hsa-miR-18a-3p', summary=TRUE)
genesDiana<- get_multimir(mirna = "hsa-miR-122", summary = TRUE)
genesDiana<- get_multimir(mirna = "hsa-miR-122")
genesDiana@data
genesDiana@queries
genesDiana@summary
genesDiana@tables
genesDiana@org
table(genesDiana@data$type)
genesDiana@data
genesDiana<- get_multimir(mirna = "hsa-miR-122", summary = TRUE)
genesDiana@data
example1 <- get_multimir(mirna='hsa-miR-18a-3p', summary=TRUE)
example1@data
genesDiana<- get_multimir(mirna = "MIMAT0000421", summary = TRUE)
genesDiana@data
genesDiana<- get_multimir(mirna = "hsa-miR-219a-1", summary = TRUE)
genesDiana<- get_multimir(mirna = "hsa-miR-338-3p", summary = TRUE)
genesDiana@data
example3 <- get_multimir(org     = "hsa",
target  = "PTEN",
table   = "predicted",
summary = TRUE,
predicted.cutoff      = 35,
predicted.cutoff.type = "p",
predicted.site        = "all")
example3@data
diseases = list_multimir("disease", limit = 10)
diseases = list_multimir("disease")
diseases
example2<-get_multimir(disease.drug = 'hepatocellular carcinoma', table = 'disease.drug')
example2
example2@summary
example2@data
library(multiMiR)
genesDiana<- get_multimir(mirna = "hsa-miR-338-3p", summary = TRUE)
genesDiana@data
#A partir de un gen determinado, buscar que miarn se dirige a este gen
example3 <- get_multimir(org     = "hsa",
target  = "PTEN",
table   = "predicted",
summary = TRUE,
predicted.cutoff      = 35,
predicted.cutoff.type = "p",
predicted.site        = "all")
example3@data
diseases = list_multimir("disease")
library(miRBaseConverter)
library(mirbase.db)
getMiRNASequence("MIMAT0000421", targetVersion = "v22")
getMiRNASequence("hsa-mir-122", targetVersion = "v22")
shiny::runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
shiny::runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
library(GOSim)
library(org.Hs.eg.db)
getGOInfo(5728)
GOenrichment(5728,allgenes, cutoff = 0.01,method="elim")
GOenrichment(5728,cutoff = 0.01,method="elim")
getGOInfo(5728)
setOntology("BP")
# Lin's method
getTermSim(c("GO:0006955","GO:0007584"),method="Lin")
# Couto's method combined with Jiang-Conrath distance
getTermSim(c("GO:0006955","GO:0007584"),method="CoutoJiangConrath")
# set enrichment factors
setEnrichmentFactors(alpha=0.1,beta=0.5)
getTermSim(c("GO:0006955","GO:0007584"),method="CoutoEnriched")
shiny::runApp('D:/TFM/TFM')
genesDiana<- get_multimir(mirna = "hsa-miR-338-3p", summary = TRUE)
genesDiana@data
example2<-get_multimir(disease.drug = 'hepatocellular carcinoma', table = 'disease.drug')
example2@data
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
example3 <- get_multimir(org     = "hsa",
target  = "PTEN",
table   = "predicted",
summary = TRUE,
predicted.cutoff      = 35,
predicted.cutoff.type = "p",
predicted.site        = "all")
example3@data
diseases = list_multimir("disease")
example3 <- get_multimir(org     = "hsa",
target  = "PTEN",
table   = "predicted",
summary = TRUE,
predicted.cutoff      = 35,
predicted.cutoff.type = "p",
predicted.site        = "all")
diseases = list_multimir("disease")
tablamir<-example3@data[ ,c(-1,-2,-5:-7)]
colnames(tablamir)<-c("miARN maduro", "Gen", "Score", "Tipo")
diseases = list_multimir("disease")
tablamir<-example3@data[ ,c(-1,-2,-5:-6)]
colnames(tablamir)<-c("miARN maduro", "Gen", "Score", "Tipo")
tablamir
runApp('D:/TFM/TFM')
example3 <- get_multimir(org     = "hsa",
target  = "PTEN",
table   = "predicted",
summary = TRUE,
predicted.cutoff      = 35,
predicted.cutoff.type = "p",
predicted.site        = "all")
diseases = list_multimir("disease")
tablamir<-example3@data[ ,c(-1,-2,-5:-6)]
colnames(tablamir)<-c("miARN involucrado", "Gen", "Score", "Tipo")
tablamir
diseases = list_multimir("disease")
diseases
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
getGOInfo(5728)
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
GOenrichment(5728,cutoff = 0.01,method="elim")
library(cgdsr)
library(GOSim)
library(org.Hs.eg.db)
GOenrichment(5728,cutoff = 0.01,method="elim", allgenes = my.symbols)
my.symbols <- c("PTEN", "AFP", "STAT3", "SIRT7", "GC", "XPO5", "HMGA2", "VEGFA", "FOXO1",  "ZEB1", "PDCD4", "GPC3", "EGFR", "SIRT1", "MET", "DNMT1", "IGF1R", "TET1", "CDC42", "KLF5", "GRN", "FOXA1", "MACC1","SOCS1", "TP53", "E2F1", "E2F3", "ROCK1", "SP1",  "CTGF", "DICER1", "HGF", "ROCK2", "BMI1", "CDK1", "FUT8", "METTL3", "PIK3R3", "AKAP12", "AURKA", "CTNNB1", "EGFL7", "HDAC6", "IGF2", "IGF2BP1", "SMAD2", "SOCS3", "UBE2I", "VDAC1", "ZEB2", "ABCB1", "AKT2","CCNE1", "FBXO11")
GOenrichment(5728,cutoff = 0.01,method="elim", allgenes = my.symbols)
GOenrichment(5728,cutoff = 0.01,method="elim", allgenes = "my.symbols")
entrez_id<-select(org.Hs.eg.db,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
GOenrichment(5728,cutoff = 0.01,method="elim", allgenes = entrez_id$ENTREZID)
entrez_id
GOenrichment(5728,cutoff = 0.01,method="elim", allgenes = "174")
etCaseLists(mycgds,'lihc_tcga')[,c(1:2)]
getCaseLists(mycgds,'lihc_tcga')[,c(1:2)]
getCaseLists(mycgds,'lihc_mskcc')[,c(1:2)]
getCaseLists(mycgds,'lihc_mskcc')
getCaseLists(mycgds,'prad_mskcc')
getCaseLists(mycgds,'lihc_tcga')[,c(1:2)]
plot(mycgds, "lihc_tcga", c("PTEN","AFP"), "lihc_tcga_mrna" ,"lihc_tcga_all")
plot(mycgds, "lihc_tcga", c("PTEN"), "lihc_tcga_mrna" ,"lihc_tcga_all")
plot(mycgds, "gbm_tcga", c("MDM2","MDM4"), "gbm_tcga_mrna" ,"gbm_tcga_all")
getCaseLists(mycgds,'lihc_amc_prv')[,c(1:2)]
getCaseLists(mycgds,'lihc_riken')[,c(1:2)]
getCaseLists(mycgds,'lihc_tcga_pan_can_atlas_2018')[,c(1:2)]
getCaseLists(mycgds,'lihc_tcga')[,c(1:2)]
getCaseLists(mycgds,'gbm_tcga')[,c(1:2)]
getCaseLists(mycgds,'lihc_tcga')[,c(1:2)]
plot(mycgds, "gbm_tcga", c("MDM2","MDM4"), "lihc_tcga_rna_seq_v2_mrna" ,"gbm_tcga_all")
plot(mycgds, "gbm_tcga", c("MDM2","MDM4"), "lihc_tcga_rna_seq_v2_mrna" ,"lihc_tcga_all")
plot(mycgds, "gbm_tcga", c("PTEN","TP53"), "lihc_tcga_rna_seq_v2_mrna" ,"lihc_tcga_all")
getProfileData(mycgds, "NF1", c("gbm_tcga_gistic","gbm_tcga_mrna"), "gbm_tcga_all")
getCaseLists(mycgds,'gbm_tcga')[,c(1:2)]
getCaseLists(mycgds,'lihc_tcga')[,c(1:2)]
getGeneSim(c("8614","2852"),similarity="OA",similarityTerm="Lin",avg=FALSE, verbose=FALSE)
getGeneSim(c("8614","2852"),similarity="OA",similarityTerm="Lin",avg=FALSE, verbose=TRUE)
shiny::runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
getGeneSim(c("8614","2852"),similarity="OA",similarityTerm="Lin",avg=FALSE, verbose= FALSE)
getGeneSim(c("8614","2852"),similarity="OA",similarityTerm="Lin",avg=FALSE, verbose= FALSE)
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
getTermSim(c("GO:0006955","GO:0007584"),method="Lin")
runApp('D:/TFM/TFM')
genesDiana<- get_multimir(mirna = "hsa-miR-338-3p", summary = TRUE)
genesDiana@data
runApp('D:/TFM/TFM')
runApp('D:/TFM/TFM')
library(rsconnect)
rsconnect::deployApp("D:/TFM/HmiR2")
token='4C87E2F1B0F073DEEA1C17E9B395A5E7',
secret='3F/wv93PZ6rM2mKdz1xCzeJe20xXZan5fdMhS8PW')
library(rsconnect)
rsconnect::deployApp("D:/TFM/HmiR2")
rsconnect::setAccountInfo(name='aconcagua',
token='4C87E2F1B0F073DEEA1C17E9B395A5E7',
secret='3F/wv93PZ6rM2mKdz1xCzeJe20xXZan5fdMhS8PW')
library(rsconnect)
rsconnect::deployApp("D:/TFM/HmiR2")
rsconnect::deployApp("D:/TFM/HmiR2")
setwd("D:/TFM/HmiR2")
rsconnect::setAccountInfo(name='aconcagua',
token='4C87E2F1B0F073DEEA1C17E9B395A5E7',
secret='3F/wv93PZ6rM2mKdz1xCzeJe20xXZan5fdMhS8PW')
library(rsconnect)
rsconnect::deployApp("D:/TFM/HmiR2")
rsconnect::appDependencies()
getOption("repos")
options(repos = BiocInstaller::biocinstallRepos())
getOption("repos")
options(repos = BiocManager::biocinstallRepos())
options(repos = BiocManager::install())
rsconnect::setAccountInfo(name='aconcagua',
token='4C87E2F1B0F073DEEA1C17E9B395A5E7',
secret='3F/wv93PZ6rM2mKdz1xCzeJe20xXZan5fdMhS8PW')
library(rsconnect)
rsconnect::deployApp("D:/TFM/HmiR2")
